<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="6" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-28T00:30:10 IST" name="Suite" finished-at="2025-03-28T00:30:26 IST" duration-ms="16017">
    <groups>
      <group name="Purchase">
        <method signature="Test1.Test1(java.util.HashMap)[pri:0, instance:mayankaggarwal.Test1@7068e664]" name="Test1" class="mayankaggarwal.Test1"/>
      </group> <!-- Purchase -->
      <group name="ErrorH">
        <method signature="Test2.Test1()[pri:0, instance:mayankaggarwal.Test2@39b43d60]" name="Test1" class="mayankaggarwal.Test2"/>
      </group> <!-- ErrorH -->
    </groups>
    <test started-at="2025-03-28T00:30:10 IST" name="Test2" finished-at="2025-03-28T00:30:21 IST" duration-ms="11123">
      <class name="mayankaggarwal.Test2">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:mayankaggarwal.Test2@39b43d60]" started-at="2025-03-28T00:30:10 IST" name="launchApplication" finished-at="2025-03-28T00:30:13 IST" duration-ms="3587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="Test1()[pri:0, instance:mayankaggarwal.Test2@39b43d60]" started-at="2025-03-28T00:30:13 IST" name="Test1" finished-at="2025-03-28T00:30:14 IST" duration-ms="581" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at mayankaggarwal.Test2.Test1(Test2.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="close()[pri:0, instance:mayankaggarwal.Test2@39b43d60]" started-at="2025-03-28T00:30:14 IST" name="close" finished-at="2025-03-28T00:30:14 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:mayankaggarwal.Test2@39b43d60]" started-at="2025-03-28T00:30:14 IST" name="launchApplication" finished-at="2025-03-28T00:30:16 IST" duration-ms="1834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="Test1()[pri:0, instance:mayankaggarwal.Test2@39b43d60]" started-at="2025-03-28T00:30:16 IST" name="Test1" finished-at="2025-03-28T00:30:16 IST" duration-ms="481" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email  password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email  password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at mayankaggarwal.Test2.Test1(Test2.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="close()[pri:0, instance:mayankaggarwal.Test2@39b43d60]" started-at="2025-03-28T00:30:16 IST" name="close" finished-at="2025-03-28T00:30:17 IST" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:mayankaggarwal.Test2@39b43d60]" started-at="2025-03-28T00:30:17 IST" name="launchApplication" finished-at="2025-03-28T00:30:18 IST" duration-ms="1518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="Test11()[pri:0, instance:mayankaggarwal.Test2@39b43d60]" started-at="2025-03-28T00:30:18 IST" name="Test11" finished-at="2025-03-28T00:30:21 IST" duration-ms="2231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test11 -->
        <test-method is-config="true" signature="close()[pri:0, instance:mayankaggarwal.Test2@39b43d60]" started-at="2025-03-28T00:30:21 IST" name="close" finished-at="2025-03-28T00:30:21 IST" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- mayankaggarwal.Test2 -->
    </test> <!-- Test2 -->
    <test started-at="2025-03-28T00:30:10 IST" name="Test 1" finished-at="2025-03-28T00:30:26 IST" duration-ms="16017">
      <class name="mayankaggarwal.Test1">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:mayankaggarwal.Test1@7068e664]" started-at="2025-03-28T00:30:10 IST" name="launchApplication" finished-at="2025-03-28T00:30:13 IST" duration-ms="3529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="Test1(java.util.HashMap)[pri:0, instance:mayankaggarwal.Test1@7068e664]" started-at="2025-03-28T00:30:13 IST" name="Test1" data-provider="getData" finished-at="2025-03-28T00:30:17 IST" duration-ms="3168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Lucifer@98, email=luciferwalker@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="close()[pri:0, instance:mayankaggarwal.Test1@7068e664]" started-at="2025-03-28T00:30:17 IST" name="close" finished-at="2025-03-28T00:30:17 IST" duration-ms="358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:mayankaggarwal.Test1@7068e664]" started-at="2025-03-28T00:30:17 IST" name="launchApplication" finished-at="2025-03-28T00:30:20 IST" duration-ms="2564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="Test1(java.util.HashMap)[pri:0, instance:mayankaggarwal.Test1@7068e664]" started-at="2025-03-28T00:30:20 IST" name="Test1" data-provider="getData" finished-at="2025-03-28T00:30:23 IST" duration-ms="3185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Lucifer@98, email=luciferwalke@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method is-config="true" signature="close()[pri:0, instance:mayankaggarwal.Test1@7068e664]" started-at="2025-03-28T00:30:23 IST" name="close" finished-at="2025-03-28T00:30:23 IST" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:mayankaggarwal.Test1@7068e664]" started-at="2025-03-28T00:30:23 IST" name="launchApplication" finished-at="2025-03-28T00:30:25 IST" duration-ms="2174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:mayankaggarwal.Test1@7068e664]" started-at="2025-03-28T00:30:25 IST" name="OrderHistoryTest" finished-at="2025-03-28T00:30:25 IST" depends-on-methods="mayankaggarwal.Test1.Test1" duration-ms="540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="close()[pri:0, instance:mayankaggarwal.Test1@7068e664]" started-at="2025-03-28T00:30:25 IST" name="close" finished-at="2025-03-28T00:30:26 IST" duration-ms="161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- mayankaggarwal.Test1 -->
    </test> <!-- Test 1 -->
  </suite> <!-- Suite -->
</testng-results>
